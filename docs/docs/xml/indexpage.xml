<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="indexpage" kind="page">
    <compoundname>index</compoundname>
    <title>shvulkan</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><anchor id="index_1md__2home_2sinho_2Desktop_2Github_2shvulkan_2README"/></para>
<para><image type="html" name="https://img.shields.io/badge/shvulkan%20|%20SINHO%20SOFTWORKS-3CFADC?style=for-the-badge&amp;logo=&amp;logoColor=white&amp;labelColor=990042" inline="yes"></image>
 <ulink url="https://github.com/mrsinho/shvulkan"><image type="html" name="https://img.shields.io/badge/GitHub_repository-3CFADC?style=for-the-badge&amp;logo=github&amp;logoColor=black" inline="yes"></image>
</ulink></para>
<para><image type="html" name="https://img.shields.io/github/commit-activity/t/mrsinho/shvulkan?style=for-the-badge&amp;label=Total%20commits&amp;color=ac162c" inline="yes"></image>
 <image type="html" name="https://img.shields.io/github/actions/workflow/status/mrsinho/shvulkan/test.yaml?style=for-the-badge&amp;label=Nix%20flake%20check&amp;labelColor=grey" inline="yes"></image>
</para>
<para><image type="html" name="https://img.shields.io/github/languages/code-size/mrsinho/shvulkan?style=for-the-badge&amp;labelColor=grey&amp;color=5277c3" inline="yes"></image>
 <image type="html" name="https://img.shields.io/github/languages/top/mrsinho/shvulkan?style=for-the-badge&amp;label=C%20language%20coverage&amp;color=7d78f2" inline="yes"></image>
</para>
<para><image type="html" name="https://img.shields.io/github/license/mrsinho/shvulkan?style=for-the-badge" inline="yes"></image>
</para>
<para><ulink url="https://mrsinho.github.io/shvulkan-docs/index.html"><image type="html" name="https://img.shields.io/badge/API%20Documentation-2C4AA8?style=for-the-badge&amp;logo=doxygen&amp;logoColor=white" alt="Doxygen" inline="yes"></image>
</ulink></para>
<para><computeroutput>shvulkan</computeroutput> is a lightweight and flexible wrapper around the VulkanÂ® API written completely in C, that makes it easier to work with graphics efficiently without writing thousands of lines of code.</para>
<para><image type="html" name="alpha-blending.png"></image>
 <image type="latex" name="alpha-blending.png"></image>
 <image type="rtf" name="alpha-blending.png"></image>
 <image type="docbook" name="alpha-blending.png"></image>
 <image type="xml" name="alpha-blending.png"></image>
</para>
<para><bold>Scene example</bold>: <emphasis>alfa blending, instancing and indexed draw calls example.</emphasis></para>
<para><image type="html" name="scene-headless-overview.png" inline="yes"></image>
 <image type="latex" name="scene-headless-overview.png" inline="yes"></image>
 <image type="rtf" name="scene-headless-overview.png" inline="yes"></image>
 <image type="docbook" name="scene-headless-overview.png" inline="yes"></image>
 <image type="xml" name="scene-headless-overview.png" inline="yes"></image>
</para>
<para><bold>Headless scene example using <ulink url="https://github.com/mrsinho/vulkan-virtual-outputs">vulkan-virtual-outputs</ulink></bold>: <emphasis>alfa blending, instancing and indexed draw calls also here, but the images are streamed in an http server.</emphasis></para>
<para><hruler/>
</para>
<sect1 id="index_1autotoc_md2">
<title>Build status</title><para><image type="html" name="https://img.shields.io/github/actions/workflow/status/mrsinho/shvulkan/test.yaml?style=for-the-badge&amp;label=Nix%20flake%20check&amp;labelColor=grey" inline="yes"></image>
 <image type="html" name="https://img.shields.io/badge/Written_in_C-3CFADC?style=for-the-badge&amp;logo=c&amp;logoColor=white&amp;labelColor=0AD0DF#.svg" inline="yes"></image>
 <image type="html" name="https://img.shields.io/badge/Compatible_with_C%2b%2b-3CFADC?style=for-the-badge&amp;logo=c%2b%2b&amp;logoColor=white&amp;labelColor=0AD0DF#.svg" inline="yes"></image>
</para>
<para>The examples are frequently being tested on <bold>Windows 11</bold>, <bold>NixOS</bold> (with Nix flake), <bold>Linux Mint</bold> (virtual machine and pc) with different compilers (<bold>MSVC</bold>, <bold>gcc</bold>), hardware configurations (RX580 4GB GDDR5, Radeon V Carrizo 500MB) and windowing systems (<bold>Win32</bold>, <bold>X11</bold>, <bold>Wayland</bold>).</para>
</sect1>
<sect1 id="index_1autotoc_md3">
<title>Clone and Build</title><para>Open the terminal and run the following commands:</para>
<para><image type="html" name="https://a11ybadges.com/badge?logo=windows" alt="Windows" inline="yes"></image>
 <image type="html" name="https://a11ybadges.com/badge?logo=debian" alt="Debian" inline="yes"></image>
</para>
<para>Tested on Win32 and X11.</para>
<para><programlisting filename=".bash"><codeline><highlight class="normal">git<sp/>clone<sp/>--recursive<sp/>https://github.com/mrsinho/shvulkan.git</highlight></codeline>
<codeline><highlight class="normal">cd<sp/>shvulkan</highlight></codeline>
<codeline><highlight class="normal">mkdir<sp/>build</highlight></codeline>
<codeline><highlight class="normal">cd<sp/>build</highlight></codeline>
<codeline><highlight class="normal">cmake<sp/>-DSH_VULKAN_BUILD_EXAMPLES=ON<sp/>..</highlight></codeline>
<codeline><highlight class="normal">cmake<sp/>--build<sp/>.</highlight></codeline>
</programlisting></para>
<para><image type="html" name="https://a11ybadges.com/badge?logo=nixos" alt="NixOS" inline="yes"></image>
</para>
<para>Tested on X11 and Wayland graphics servers. The Nix flake lets the system choose the default windowing system.</para>
<para><simplesect kind="warning"><para>While testing with Wayland revealed no issues, there are some resizing issues when using X11.</para>
</simplesect>
<programlisting filename=".bash"><codeline><highlight class="normal">git<sp/>clone<sp/>--recursive<sp/>https://github.com/mrsinho/shvulkan.git</highlight></codeline>
<codeline><highlight class="normal">cd<sp/>shvulkan</highlight></codeline>
<codeline><highlight class="normal">nix<sp/>develop<sp/>--command<sp/>bash<sp/>#<sp/>enter<sp/>the<sp/>flake<sp/>environment</highlight></codeline>
<codeline><highlight class="normal">cd<sp/>bin/linux</highlight></codeline>
<codeline><highlight class="normal">./shvulkan-clear-color<sp/>&amp;<sp/>./shvulkan-scene<sp/>&amp;<sp/>./shvulkan-compute-power-numbers</highlight></codeline>
</programlisting></para>
<para><image type="html" name="nixos-wayland-scene.png">NixOS Wayland</image>
 <image type="latex" name="nixos-wayland-scene.png">NixOS Wayland</image>
 <image type="rtf" name="nixos-wayland-scene.png">NixOS Wayland</image>
 <image type="docbook" name="nixos-wayland-scene.png">NixOS Wayland</image>
 <image type="xml" name="nixos-wayland-scene.png">NixOS Wayland</image>
</para>
<para><hruler/>
</para>
</sect1>
<sect1 id="index_1autotoc_md5">
<title>CMake targets and variables</title><para><table rows="6" cols="3"><row>
<entry thead="yes"><para>CMake Target   </para>
</entry><entry thead="yes"><para>Type   </para>
</entry><entry thead="yes"><para>Configure Flags    </para>
</entry></row>
<row>
<entry thead="no"><para>shvulkan   </para>
</entry><entry thead="no"><para>library   </para>
</entry><entry thead="no"><para>/    </para>
</entry></row>
<row>
<entry thead="no"><para>shvulkan-docs   </para>
</entry><entry thead="no"><para>Doxygen outputs   </para>
</entry><entry thead="no"><para>/    </para>
</entry></row>
<row>
<entry thead="no"><para>shvulkan-clear-color   </para>
</entry><entry thead="no"><para>executable   </para>
</entry><entry thead="no"><para>SH_VULKAN_BUILD_EXAMPLES=ON    </para>
</entry></row>
<row>
<entry thead="no"><para>shvulkan-scene   </para>
</entry><entry thead="no"><para>executable   </para>
</entry><entry thead="no"><para>SH_VULKAN_BUILD_EXAMPLES=ON    </para>
</entry></row>
<row>
<entry thead="no"><para>shvulkan-compute-example   </para>
</entry><entry thead="no"><para>executable   </para>
</entry><entry thead="no"><para>SH_VULKAN_BUILD_EXAMPLES=ON   </para>
</entry></row>
</table>
</para>
<para>If the cmake option <computeroutput>SH_VULKAN_BUILD_EXAMPLES</computeroutput> is enabled, the additional <ulink url="https://github.com/glfw/glfw"><computeroutput>glfw</computeroutput></ulink> target will be generated as a static library.</para>
<para><table rows="4" cols="2"><row>
<entry thead="yes"><para>CMake Variable   </para>
</entry><entry thead="yes"><para>About    </para>
</entry></row>
<row>
<entry thead="no"><para>SH_VULKAN_VERSION   </para>
</entry><entry thead="no"><para>Version of the <computeroutput>shvulkan</computeroutput> library    </para>
</entry></row>
<row>
<entry thead="no"><para>SH_VULKAN_ROOT_DIR   </para>
</entry><entry thead="no"><para>Absolute path to the root of the repository directory    </para>
</entry></row>
<row>
<entry thead="no"><para>SH_VULKAN_BINARIES_DIR   </para>
</entry><entry thead="no"><para>Absolute path to the output binaries directory   </para>
</entry></row>
</table>
</para>
<para><hruler/>
</para>
</sect1>
<sect1 id="index_1autotoc_md7">
<title>Embed shvulkan with your C/C++ projects</title><para>To link to the <computeroutput>shvulkan</computeroutput> library with CMake:</para>
<para><programlisting filename=".cmake"><codeline><highlight class="normal">if<sp/>(NOT<sp/>TARGET<sp/>shvulkan)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">set(SH_VULKAN_ROOT_DIR<sp/><sp/><sp/><sp/><sp/>path/to/shvulkan/root/directory)</highlight></codeline>
<codeline><highlight class="normal">set(SH_VULKAN_BINARIES_DIR<sp/>path/your/binaries/directory)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">include(${SH_VULKAN_ROOT_DIR}/shvulkan/shvulkan.cmake)</highlight></codeline>
<codeline><highlight class="normal">build_shvulkan()</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">endif()</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>[...]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">target_link_libraries(app<sp/>PUBLIC<sp/>shvulkan)</highlight></codeline>
</programlisting></para>
<para>Then, include the <computeroutput><ref refid="shVulkan_8h" kindref="compound">shVulkan.h</ref></computeroutput> header file:</para>
<para><programlisting filename=".c"><codeline><highlight class="preprocessor">#include<sp/>&lt;<ref refid="shVulkan_8h" kindref="compound">shvulkan/shVulkan.h</ref>&gt;</highlight></codeline>
</programlisting></para>
</sect1>
<sect1 id="index_1autotoc_md8">
<title>Examples</title><para><computeroutput>shvulkan</computeroutput> ships with one <ulink url="https://github.com/mrsinho/shvulkan/tree/main/examples/src/compute/power-numbers.c"><computeroutput>compute example</computeroutput></ulink>, one graphics <ulink url="https://github.com/mrsinho/shvulkan/tree/main/examples/src/graphics/clear-color.c"><computeroutput>clear color example</computeroutput></ulink>, one graphics <ulink url="https://github.com/mrsinho/shvulkan/tree/main/examples/src/graphics/scene.c"><computeroutput>scene example</computeroutput></ulink> and a <ulink url="https://github.com/mrsinho/shvulkan/tree/main/examples/src/graphics/clear-color.c"><computeroutput>headless scene</computeroutput></ulink> graphics example, which instead of presenting images to the screen it streams the graphics output with an http server. </para>
</sect1>
    </detaileddescription>
    <location file="/home/sinho/Desktop/Github/shvulkan/README.md"/>
  </compounddef>
</doxygen>
